@include "base.fgd"

// Override trigger_teleport to allow showing the field "Stop player?"
@SolidClass base(Trigger) = trigger_teleport : 
	"A trigger volume that teleports entities that touch it. Entities are teleported to the Remote Destination, and have their angles "+
	"set to that of the Remote Destination's. If a Local Destination Landmark is specified, teleported entities are offset from the target "+
	"by their initial offset from the landmark, and their angles are left alone."
[
	target(target_destination) : "Remote Destination" : : "The entity specifying the point to which entities should be teleported."
	landmark(target_destination) : "Local Destination Landmark" : : "If specified, then teleported entities are offset from the target by their initial offset from the landmark."
	stop(choices) : "Stop player on teleport" : "0" = 
	[
		0 : "False"
		1 : "True"
	]
	spawnflags(flags) =
	[
		32: "Preserve angles even when a local landmark is not specified" : 0
	]
] 


@SolidClass base(Trigger) = trigger_timer_start : "Trigger that starts the timer."
[
]

@SolidClass base(Trigger) = trigger_timer_stop : "Trigger that stops the timer."
[

]

@SolidClass base(Trigger) = trigger_timer_checkpoint : "Trigger that saves current position."
[
		checkpoint(integer) : "Checkpoint Number" : 1 : "The checkpoint number (stage) that this trigger correlates to. (0 is automatically the start trigger!)"
]

@SolidClass base(Trigger) = trigger_timer_checkpoint_teleport : "Trigger that teleports to the desired checkpoint."
[
		checkpoint(integer) : "Checkpoint Number" : -1 : "The checkpoint number (stage) that this trigger correlates to. If -1, it teleports to the latest checkpoint."
		stop(choices) : "Stop player on teleport" : "0" = 
		[
			0 : "False"
			1 : "True"
		]
]

@SolidClass base(Trigger) = trigger_timer_resetonehop : "Trigger that resets one hops."
[

]

@SolidClass base(Trigger) = trigger_timer_onehop : "Trigger that only allows for one hop."
[
		checkpoint(integer) : "Checkpoint Number" : -1 : "The checkpoint number (stage) that this trigger correlates to. If -1, it teleports to the latest checkpoint.(0 (-2 also works) for StartTrigger)"
		hold(float) : "Time teleport delay" : 1 : "If the player is in this trigger for longer than this, teleport him to Checkpoint Number checkpoint"
		stop(choices) : "Stop player on teleport" : "0" = 
		[
			0 : "False"
			1 : "True"
		]
]

@FilterClass base(Targetname) = filter_activator_checkpoint : "Filter that checks to see if the player is at the given checkpoint or not."
[
		checkpoint(integer) : "Minimum req. checkpoint" : 0 : "The minimum checkpoint the player needs to be at in order for the filter to accept the activator. (0 is start!)"
]